plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
	id "com.github.breadmoirai.github-release" version "2.4.1"
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name 'Quilt'
		url 'https://maven.quiltmc.org/repository/release'
	}
	maven {
		url 'https://jitpack.io'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${project.minecraft_version}+build.${project.quilt_mappings}:intermediary-v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//	include implementation("com.github.LlamaLad7:MixinExtras:0.0.9")
//	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.0.9")

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

githubRelease {
	if (System.getenv("GH_TOKEN") != null) {
		authorization = "Token ${System.getenv("GH_TOKEN")}"
	}
	owner = "UltrusBot"
	repo = "ExtraSponges"
	targetCommitish = "1.19.4"
	tagName = "v${project.version}"
	body = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
	releaseAssets = [remapJar, remapSourcesJar]
}

modrinth {
	if (System.getenv("MODRINTH_TOKEN") != null) {
		token = System.getenv("MODRINTH_TOKEN")
	}
	projectId = "extrasponges"
	versionType = "release"
	versionName = "Extra Sponges v${project.version}"
	uploadFile = remapJar
	changelog = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
	versionName = "Extra Sponges v${project.version}"
	gameVersions = ["1.19.4"]
	loaders = ["quilt", "fabric"]
	syncBodyFrom = rootProject.file("README.md").text
}



curseforge {
	if (System.getenv("CF_API_KEY") != null) {
		apiKey = System.getenv("CF_API_KEY")

	}
	project {
		id = "457043"
		changelogType = "markdown"
		changelog = new File("$rootDir/CHANGELOG.md").getText('UTF-8')
		releaseType = "release"
		addGameVersion "1.19.4"
		mainArtifact(remapJar) {
			displayName = "Extra Sponges v${project.version}"
		}
	}

}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}